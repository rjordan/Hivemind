# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  host: <%= ENV.fetch("HIVEMIND_DB_HOST") { "192.168.33.1" } %>
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: <%= ENV.fetch("HIVEMIND_DB_USER") { "rails" } %>
  password: <%= ENV.fetch("HIVEMIND_DB_PASSWORD") { "rails" } %>
  # Schema search path. The server defaults to $user,public
  #schema_search_path: myapp,sharedapp,public
  # Minimum log levels, in increasing order:
  #   debug5, debug4, debug3, debug2, debug1,
  #   log, notice, warning, error, fatal, and panic
  # Defaults to warning.
  #min_messages: notice

development:
  <<: *default
  database: hivemind_dev

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: hivemind_test

production:
  primary: &primary_production
    <<: *default
    database: hivemind
# Switch these to redis
  cache:
    <<: *primary_production
    database: hivemind_cache
    migrations_paths: db/cache_migrate
  queue:
    <<: *primary_production
    database: hivemind_queue
    migrations_paths: db/queue_migrate
  cable:
    <<: *primary_production
    database: hivemind_cable
    migrations_paths: db/cable_migrate
